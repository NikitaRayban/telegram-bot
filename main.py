from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

API_TOKEN = '7675637455:AAHoyrmpuCpXsTUobb8MOmJxTP3a2cyC6bc'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# === –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å" ===
start_kb = ReplyKeyboardMarkup(resize_keyboard=True)
start_kb.add(KeyboardButton("üöÄ –ù–∞—á–∞—Ç—å"))

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add(
    KeyboardButton("üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∏—Ä–∂–∏"),
    KeyboardButton("üè¶ –í—ã–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É"),
)
main_kb.add(KeyboardButton("üìû –°–≤—è–∑—å —Å –æ–≤–Ω–µ—Ä–æ–º"))

# === /start –∫–æ–º–∞–Ω–¥–∞ ===
@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    await msg.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—Ä–∏–ø—Ç–æ-–æ–±–º–µ–Ω –±–æ—Ç.\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=start_kb
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å" ===
@dp.message_handler(lambda m: m.text == "üöÄ –ù–∞—á–∞—Ç—å")
async def show_main_menu(msg: types.Message):
    await msg.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=main_kb
    )

# === –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∏—Ä–∂–∏ ===
@dp.message_handler(lambda m: m.text == "üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∏—Ä–∂–∏")
async def deposit(msg: types.Message):
    await msg.answer(
        "**–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∏—Ä–∂–∏ USDT ‚Üí –≥—Ä–Ω**\n\n"
        "–ö—É—Ä—Å: *1 USDT = 39.5 –≥—Ä–Ω*  üìà\n\n"
        "–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∞–¥—Ä–µ—Å TRC20:\n"
        "`TXABC123456789XYZ`  ‚Üê üîÅ –£–ö–ê–ñ–ò –°–í–û–ô –ê–î–†–ï–°!\n\n"
        "–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞ TX —Ö—ç—à–∞.",
        parse_mode='Markdown'
    )

# === –í—ã–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É ===
@dp.message_handler(lambda m: m.text == "üè¶ –í—ã–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É")
async def withdraw(msg: types.Message):
    await msg.answer(
        "**–í—ã–≤–æ–¥ —Å –±–∏—Ä–∂–∏ ‚Üí –Ω–∞ –∫–∞—Ä—Ç—É (–≥—Ä–Ω)**\n\n"
        "–ö—É—Ä—Å: *1 USDT = 39.0 –≥—Ä–Ω* üè¶\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏, –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "`1000 UAH  5375 XXXX XXXX XXXX`",
        parse_mode='Markdown'
    )

# === –°–≤—è–∑—å —Å –æ–≤–Ω–µ—Ä–æ–º ===
@dp.message_handler(lambda m: m.text == "üìû –°–≤—è–∑—å —Å –æ–≤–Ω–µ—Ä–æ–º")
async def contact(msg: types.Message):
    await msg.answer(
        "üì© –ù–∞–ø–∏—à–∏ –≤–ª–∞–¥–µ–ª—å—Ü—É –≤ Telegram:\n"
        "@yourusername  ‚Üê üîÅ –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô @–Æ–ó–ï–†–ù–ï–ô–ú"
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—á–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
@dp.message_handler()
async def echo(msg: types.Message):
    await msg.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
